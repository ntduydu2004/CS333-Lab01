Question 1: Looking at the backtrace output, which function called syscall?
- syscall was called by function usertrap in `kernel/trap.c`

Question 2: What is the value of p->trapframe->a7 and what does that value represent?
- The value of p->trapframe->a7 is 7, which represents the system call number (which can be seen in file `kernel/syscall.h`)

Question 3: What was the previous mode that the CPU was in?
- The value of the Supervisor-mode status register is 0x22, which can be converted to binary as 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0010 0010. According to the RISC-V privileged instructions, the SPP bit (8th bit) is 0, which means the previous mode was User mode.

Question 4: Write down the assembly instruction the kernel is panicing at. Which register corresponds to the variable num?
- sepc=0x0000000080002052. In `kernel/kernel.asm`, the register corresponds to the variable num is `a3`.
- After confirming by using gdb, the register corresponds to the variable num is `a3`.

Question 5: Why does the kernel crash?
- The kernel crashed because address 0 is not mapped to any physical memory, so the kernel cannot access it. 
- Printing $scause, we receive value 0xd, which is 01101. According to the RISC-V privileged instructions, it is a load page fault.

Question 6: What is the name of the binary that was running when the kernel paniced? What is its process id (pid)?
- The name of the binary that was running when the kernel paniced is `initcode`. Its process id (pid) is 1.